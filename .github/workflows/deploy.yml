name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Test Backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run Backend Tests
      run: |
        cd backend
        npm test --if-present
    
    - name: Backend Lint Check
      run: |
        cd backend
        npm run lint --if-present

  test-frontend:
    runs-on: ubuntu-latest
    name: Test Frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Frontend Lint Check
      run: |
        cd frontend
        npm run lint --if-present
    
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
      env:
        VITE_API_URL: https://officepulse-backend.onrender.com/api

  deploy-backend:
    needs: [test-backend]
    runs-on: ubuntu-latest
    name: Deploy Backend to Render
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy Backend
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}

  deploy-frontend:
    needs: [test-frontend]
    runs-on: ubuntu-latest
    name: Deploy Frontend to Render
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy Frontend
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}

  notify:
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    name: Deployment Notification
    if: always()
    
    steps:
    - name: Deployment Success
      if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success'
      run: |
        echo "üéâ Deployment successful!"
        echo "Frontend: https://officepulse-frontend.onrender.com"
        echo "Backend: https://officepulse-backend.onrender.com"
    
    - name: Deployment Failed
      if: needs.deploy-backend.result == 'failure' || needs.deploy-frontend.result == 'failure'
      run: |
        echo "‚ùå Deployment failed!"
        exit 1